services:
  portal-front:
    container_name: portal-front
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    image: filigran/portal-front:${IMAGE_TAGS}
    build:
      context: ../portal-front/.
      cache_from:
        - type=registry,ref=filigran/portal-front:cache-${IMAGE_TAGS}
        - type=registry,ref=filigran/portal-front:main
        - type=registry,ref=filigran/portal-front:development
    depends_on:
      portal-api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://portal-front:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 10
    environment:
      - SERVER_HTTP_API=http://portal-api:4001

  portal-front-test:
    container_name: portal-front-test
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    build:
      context: ../portal-front/.
      dockerfile: test.Dockerfile
      cache_from:
        - type=registry,ref=filigran/portal-front:cache-${IMAGE_TAGS}
        - type=registry,ref=filigran/portal-front:main
        - type=registry,ref=filigran/portal-front:development
    environment:
      - SERVER_HTTP_API=http://portal-api:4001

  portal-api-test:
    container_name: portal-api-test
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    build:
      context: ../portal-api/.
      dockerfile: test.Dockerfile
      cache_from:
        - type=registry,ref=filigran/portal-api:cache-${IMAGE_TAGS}
        - type=registry,ref=filigran/portal-api:main
        - type=registry,ref=filigran/portal-api:development
    depends_on:
      portal-postgres:
        condition: service_healthy
      portal-minio:
        condition: service_healthy
    environment:
      - DATABASE_HOST=portal-postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=portal
      - DATABASE_BASE=postgres
      - DATABASE_PASSWORD=portal-password
      - ADMIN_EMAIL=admin@filigran.io
      - ADMIN_PASSWORD=admin
      - NODE_ENV=development
      - MINIO_BUCKET_NAME=xtmhubbucket
      - MINIO_ENDPOINT=portal-minio
      - MINIO_PORT=9000
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=password
      - MINIO_USE_SSL=false

  portal-api:
    container_name: portal-api
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    image: filigran/portal-api:${IMAGE_TAGS}
    build:
      context: ../portal-api/.
      cache_from:
        - type=registry,ref=filigran/portal-api:cache-${IMAGE_TAGS}
        - type=registry,ref=filigran/portal-api:main
        - type=registry,ref=filigran/portal-api:development
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://portal-api:4001/health"]
      interval: 10s
      timeout: 5s
      retries: 10
    depends_on:
      portal-postgres:
        condition: service_healthy
      portal-minio:
        condition: service_healthy
    environment:
      - DATABASE_HOST=portal-postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=portal
      - DATABASE_BASE=test_database
      - DATABASE_PASSWORD=portal-password
      - ADMIN_EMAIL=admin@filigran.io
      - ADMIN_PASSWORD=admin
      - DATA_SEEDING=true
      - MINIO_BUCKET_NAME=xtmhubbucket
      - MINIO_ENDPOINT=portal-minio
      - MINIO_PORT=9000
      - MINIO_ACCESS_KEY=portal
      - MINIO_SECRET_KEY=changeme
      - MINIO_USE_SSL=false
      - NODE_ENV=development
      - VITEST_MODE=true
      - START_DEV_SERVER=true

  portal-postgres:
    container_name: portal-postgres
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    image: postgres:16.0
    environment:
      - POSTGRES_USER=portal
      - POSTGRES_PASSWORD=portal-password
      - POSTGRES_DB=test_database
      - PGDATA=/data/postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "test_database"]
      interval: 10s
      timeout: 5s
      retries: 10

  portal-minio:
    container_name: portal-minio
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    image: "minio/minio:RELEASE.2024-08-03T04-33-23Z"
    environment:
      MINIO_ROOT_USER: portal
      MINIO_ROOT_PASSWORD: changeme
    command: "minio server /data/minio"
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 10s
      timeout: 5s
      retries: 10

  portal-e2e-tests:
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    image: filigran/portal-e2e-tests:${IMAGE_TAGS}
    build:
      context: ../portal-e2e-tests/.
      cache_from:
        - type=registry,ref=filigran/portal-e2e-tests:cache-${IMAGE_TAGS}
        - type=registry,ref=filigran/portal-e2e-tests:main
        - type=registry,ref=filigran/portal-e2e-tests:development
    volumes:
      - "./test-results:/app/test-results"
    depends_on:
      portal-front:
        condition: service_healthy
      portal-api:
        condition: service_healthy
      portal-minio:
        condition: service_healthy
    environment:
      - E2E_BASE_URL=http://portal-front:3000
      - E2E_API_URL=http://portal-api:4001
      - POSTGRES_USER=portal
      - DATABASE_HOST=portal-postgres
      - POSTGRES_DB=test_database
      - POSTGRES_PASSWORD=portal-password
      - DATABASE_PORT=5432
      - TEAMS_WEBHOOK_E2E=${TEAMS_WEBHOOK_E2E}
      - MIGRATIONS_PATH=./migrations
      - SEEDS_PATH=./seeds
      - GITHUB_PR_NUMBER=${GITHUB_PR_NUMBER}
      - GITHUB_PR_TITLE=${GITHUB_PR_TITLE}
      - GITHUB_RUN_ID=${GITHUB_RUN_ID}
