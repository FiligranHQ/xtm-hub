enum OCTIPlatformContract {
  CE
  EE
}

type OCTIPlatform implements Node {
  id: ID!
  url: String!
  title: String!
  contract: OCTIPlatformContract!
  platform_id: String!
}

input OCTIPlatformInput {
  id: ID!
  url: String!
  title: String!
  contract: OCTIPlatformContract!
}

input EnrollOCTIPlatformInput {
  organizationId: ID!
  platform: OCTIPlatformInput!
}

input CanEnrollOCTIPlatformInput {
  organizationId: ID!
  platformId: String!
}

input CanUnenrollOCTIPlatformInput {
  platformId: String!
}

type EnrollmentResponse {
  token: String!
}

enum CanEnrollStatus {
  enrolled
  unenrolled
  never_enrolled
}

type CanEnrollResponse {
  isAllowed: Boolean!
  status: CanEnrollStatus!
  isSameOrganization: Boolean
}

type CanUnenrollResponse {
  isPlatformEnrolled: Boolean!
  isAllowed: Boolean
  organizationId: ID
}

input UnenrollOCTIPlatformInput {
  platformId: String!
}

input OCTIPlatformEnrollmentStatusInput {
  platformId: String!
  token: String!
}

enum OCTIPlatformEnrollmentStatus {
  active
  inactive
}

type OCTIPlatformEnrollmentStatusResponse {
  status: OCTIPlatformEnrollmentStatus!
}

type Query {
  canEnrollOCTIPlatform(input: CanEnrollOCTIPlatformInput!): CanEnrollResponse!
    @auth
  canUnenrollOCTIPlatform(
    input: CanUnenrollOCTIPlatformInput!
  ): CanUnenrollResponse!
  octiPlatforms: [OCTIPlatform!]! @auth
  octiPlatformEnrollmentStatus(
    input: OCTIPlatformEnrollmentStatusInput!
  ): OCTIPlatformEnrollmentStatusResponse!
}

type Mutation {
  enrollOCTIPlatform(input: EnrollOCTIPlatformInput!): EnrollmentResponse!
    @auth(requires: [ADMINISTRATE_ORGANIZATION, MANAGE_OCTI_ENROLLMENT])
  unenrollOCTIPlatform(input: UnenrollOCTIPlatformInput): Success!
    @auth(requires: [ADMINISTRATE_ORGANIZATION, MANAGE_OCTI_ENROLLMENT])
}
