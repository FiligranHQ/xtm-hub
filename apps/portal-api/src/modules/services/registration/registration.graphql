enum OCTIPlatformContract {
  CE
  EE
}

type OCTIPlatform implements Node {
  id: ID!
  url: String!
  title: String!
  contract: OCTIPlatformContract!
  platform_id: String!
}

input OCTIPlatformInput {
  id: ID!
  url: String!
  title: String!
  contract: OCTIPlatformContract!
}

input EnrollOCTIPlatformInput {
  organizationId: ID!
  platform: OCTIPlatformInput!
}

input CanUnenrollOCTIPlatformInput {
  platformId: String!
}

type EnrollmentResponse {
  token: String!
}

enum PlatformRegistrationStatus {
  registered
  unregistered
  never_registered
}

input IsOCTIPlatformRegisteredInput {
  platformId: String!
}

type IsOCTIPlatformRegisteredOrganization implements Node {
  id: ID!
}

type IsOCTIPlatformRegisteredResponse {
  status: PlatformRegistrationStatus!
  organization: IsOCTIPlatformRegisteredOrganization
}

type CanUnenrollResponse {
  isPlatformEnrolled: Boolean!
  isAllowed: Boolean
  isInOrganization: Boolean
  organizationId: ID
}

input UnenrollOCTIPlatformInput {
  platformId: String!
}

input OCTIPlatformEnrollmentStatusInput {
  platformId: String!
  token: String!
}

enum OCTIPlatformEnrollmentStatus {
  active
  inactive
}

type OCTIPlatformEnrollmentStatusResponse {
  status: OCTIPlatformEnrollmentStatus!
}

type Query {
  isOCTIPlatformRegistered(
    input: IsOCTIPlatformRegisteredInput!
  ): IsOCTIPlatformRegisteredResponse! @auth
  canUnenrollOCTIPlatform(
    input: CanUnenrollOCTIPlatformInput!
  ): CanUnenrollResponse! @auth
  octiPlatforms: [OCTIPlatform!]! @auth
  octiPlatformEnrollmentStatus(
    input: OCTIPlatformEnrollmentStatusInput!
  ): OCTIPlatformEnrollmentStatusResponse!
}

type Mutation {
  enrollOCTIPlatform(input: EnrollOCTIPlatformInput!): EnrollmentResponse! @auth
  unenrollOCTIPlatform(input: UnenrollOCTIPlatformInput): Success! @auth
}
