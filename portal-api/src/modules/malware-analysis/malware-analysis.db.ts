import { PortalContext } from '../../model/portal-context';
import MalwareAnalysis, {
  MalwareAnalysisId,
  MalwareAnalysisInitializer,
  MalwareAnalysisMutator,
} from '../../model/kanel/public/MalwareAnalysis';
import { db, dbUnsecure } from '../../../knexfile';

export const loadMalwareAnalysisByUser = async (
  context: PortalContext,
  field: string,
  value: string
): Promise<MalwareAnalysis> => {
  return db<MalwareAnalysis>(context, 'MalwareAnalysis')
    .where({ [field]: value })
    .select('*');
};

export const insertMalwareAnalysis = async (
  context: PortalContext,
  malwareAnalysis: MalwareAnalysisInitializer
): Promise<MalwareAnalysis[]> => {
  return db<MalwareAnalysis>(context, 'MalwareAnalysis')
    .insert(malwareAnalysis)
    .returning('*');
};

export const updateMalwareAnalysis = async (
  context: PortalContext,
  malwareAnalysis: MalwareAnalysisMutator
): Promise<MalwareAnalysis[]> => {
  return db<MalwareAnalysis>(context, 'MalwareAnalysis')
    .where({ id: malwareAnalysis.id })
    .update(malwareAnalysis)
    .returning('*');
};

export const updateUnsecureMalwareAnalysis = async (
  malwareAnalysis: MalwareAnalysisMutator
): Promise<MalwareAnalysis[]> => {
  return dbUnsecure<MalwareAnalysis>('MalwareAnalysis')
    .where({ id: malwareAnalysis.id })
    .update(malwareAnalysis)
    .returning('*');
};

export const deleteMalwareAnalysis = async (
  context: PortalContext,
  id: MalwareAnalysisId
): Promise<MalwareAnalysis[]> => {
  return db<MalwareAnalysis>(context, 'MalwareAnalysis')
    .where({ id })
    .del()
    .returning('*');
};
