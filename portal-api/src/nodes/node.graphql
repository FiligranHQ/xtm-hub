directive @auth(
  requires: [Restriction] = []
) repeatable on OBJECT | FIELD_DEFINITION

enum Restriction {
  BYPASS
  BCK_MANAGE_SERVICES
  BCK_MANAGE_COMMUNITIES
  FRT_SERVICE_SUBSCRIBER
  FRT_MANAGE_SETTINGS
  FRT_ACCESS_BILLING
  FRT_MANAGE_USER
  FRT_ACCESS_SERVICES
}

directive @service_capa(
  requires: [ServiceRestriction] = []
) repeatable on OBJECT | FIELD_DEFINITION

enum ServiceRestriction {
  ACCESS_USER
  ADMIN_SUBSCRIPTION
  MANAGE_ACCESS
}

interface Node {
  id: ID!
}

enum OrderingMode {
  asc
  desc
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type MergeEvent implements Node {
  id: ID!
  from: ID!
  target: ID!
}

type Query {
  node(id: ID!): Node @auth
}
