apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Namespace}}-{{ .Release.Name }}-ingress
  annotations:
    cert-manager.io/cluster-issuer: {{ .Values.tls_issuer }}
    external-dns.alpha.kubernetes.io/hostname: {{ tpl .Values.cloudportal.host . }}
    external-dns.alpha.kubernetes.io/ttl: "120"
    prometheus.io/probe: "true"
    {{- if eq .Values.ingressClass "nginx" }}
    nginx.ingress.kubernetes.io/proxy-body-size: 256m
    nginx.ingress.kubernetes.io/retry-non-idempotent: "true"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30s"
    nginx.ingress.kubernetes.io/proxy-next-upstream: "error timeout http_502 http_503 http_504"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($request_uri ~* \.(js|css|gif|jpe?g|png|svg|ico)) {
        expires 1M;
        add_header Cache-Control "public";
      }
    {{- end }}
spec:
  ingressClassName: {{ .Values.ingressClass }} 
  rules:
  - host: {{ .Values.cloudportal.host }}
    http:
      paths:
      - backend:
          service:
            name: portal-front
            port:
              number: 3000
        path: /
        pathType: Prefix
  - host: pgadmin.{{ .Values.cloudportal.host }}
    http:
      paths:
        - backend:
            service:
              name: {{ .Release.Name }}-pgadmin
              port:
                number: 80
          path: /
          pathType: Prefix
  tls:
  - hosts:
    - {{ .Values.cloudportal.host }}
    - pgadmin.{{ .Values.cloudportal.host }}
    secretName: cloudportal-cert
