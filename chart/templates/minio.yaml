apiVersion: minio.min.io/v2
kind: Tenant
metadata:
  annotations:
    prometheus.io/path: /minio/v2/metrics/cluster
    prometheus.io/port: "9000"
    prometheus.io/scheme: http
    prometheus.io/scrape: "true"
  name: {{ .Release.Name }}-minio
spec:
  configuration:
    name: minio-credentials
  env:
    - name: MINIO_PROMETHEUS_AUTH_TYPE
      value: public
  features:
    bucketDNS: false
    enableSFTP: false
  image: "{{ .Values.minio.image.repository }}:{{ .Values.minio.image.digest | default .Values.minio.image.tag }}"
  imagePullPolicy: IfNotPresent
  logging:
    anonymous: true
    json: true
    quiet: true
  mountPath: /export
  podManagementPolicy: Parallel
  pools:
  - name: xtmhub
    servers: {{ .Values.minio.server.count }}
    volumeClaimTemplate:
      metadata:
        name: data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.minio.storage.diskSize }}
            {{- with .Values.minio.resources.requests.cpu }}
            cpu: {{ . | quote }}
            {{- end }}
            {{- with .Values.minio.resources.requests.memory }}
            memory: {{ . | quote }}
            {{- end }}
          limits:
            {{- with .Values.minio.resources.limits.cpu }}
            cpu: {{ . | quote }}
            {{- end }}
            {{- with .Values.minio.resources.limits.memory }}
            memory: {{ . | quote }}
            {{- end }}
    volumesPerServer: {{ .Values.minio.storage.diskCount }}
    affinity: {{- .Values.minio.server.affinity | toYaml | nindent 6 }}
  prometheusOperator: false
  requestAutoCert: false
  subPath: /data
