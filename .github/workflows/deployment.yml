name: Create Deployment

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: "Deployment version type"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      actions: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Ensure we're on main branch
        run: |
          git checkout main
          git pull origin main

      - name: Enable Corepack
        run: corepack enable

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "23"
          cache: "yarn"
          cache-dependency-path: |
            yarn.lock

      - name: Verify directories exist
        run: |
          if [ ! -d "./apps/portal-api" ] || [ ! -d "./apps/portal-front" ]; then
            echo "Error: apps/portal-api or apps/portal-front directory does not exist"
            exit 1
          fi

      - name: Install dependencies
        working-directory: .
        run: |
          yarn install
          yarn plugin import version

      - name: Bump deployment version in portal-api
        working-directory: ./apps/portal-api
        run: |
          yarn version ${{ github.event.inputs.version_type }}
          echo "NEW_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Sync deployment version in portal-front
        working-directory: ./apps/portal-front
        run: |
          yarn version ${{ env.NEW_VERSION }}

      - name: Commit and tag changes
        run: |
          git add package.json yarn.lock apps/portal-api/package.json apps/portal-front/package.json
          git commit -m "chore(release): bump version to ${{ env.NEW_VERSION }}"
          git tag "v${{ env.NEW_VERSION }}"

      - name: Push changes and tag
        run: |
          git push origin main
          git push origin "v${{ env.NEW_VERSION }}"

      - name: Trigger Docker Build Workflow
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Triggering dockerbuild-ci workflow..."
          curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/dockerbuild-ci.yml/dispatches \
            -d '{"ref":"v${{ env.NEW_VERSION }}"}'
          echo "âœ… Docker build workflow triggered successfully"

      - name: Summary
        run: |
          echo "## Deployment Summary ðŸš€" >> $GITHUB_STEP_SUMMARY
          echo "- **New Version:** v${{ env.NEW_VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Version Type:** ${{ github.event.inputs.version_type }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Components Updated:** apps/portal-api, apps/portal-front" >> $GITHUB_STEP_SUMMARY
          echo "- **Tag Created:** v${{ env.NEW_VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Deployment Workflow:** Triggered automatically" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The deployment has been successfully created and the Docker build workflow has been triggered." >> $GITHUB_STEP_SUMMARY
