name: Run XTM Hub CI/CD
on:
  push:
    branches:
      - 'main'
    paths:
      - 'portal-api/**'
      - 'portal-front/**'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'main'
    paths:
      - 'portal-api/**'
      - 'portal-front/**'

jobs:
  build-images:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: true
      matrix:
        include:
          - image: portal-front
          - image: portal-api
          - image: portal-e2e-tests
    outputs:
      docker-tags: ${{ fromJSON(steps.meta-deps.outputs.json).labels['org.opencontainers.image.version'] }}
      docker-labels: ${{ steps.meta-deps.outputs.labels }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Docker meta deps
        id: meta-deps
        uses: docker/metadata-action@v5
        with:
          images: filigran/${{ matrix.image }}-deps
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Build and push portal deps
        uses: docker/build-push-action@v6
        if: ${{ matrix.image != 'portal-e2e-tests' }}
        with:
          context: ${{ matrix.image }}
          push: true
          tags: ${{ steps.meta-deps.outputs.tags }}
          labels: ${{ steps.meta-deps.outputs.labels }}
          cache-from: |
            type=registry,ref=filigran/${{ matrix.image }}-deps:main
            type=registry,ref=filigran/${{ matrix.image }}-deps:${{ fromJSON(steps.meta-deps.outputs.json).labels['org.opencontainers.image.version'] }}
          target: deps
      - name: Docker meta deps
        id: meta-image
        uses: docker/metadata-action@v5
        with:
          images: filigran/${{ matrix.image }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Build and push portal image
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.image }}
          push: true
          tags: ${{ steps.meta-image.outputs.tags }}
          labels: ${{ steps.meta-image.outputs.labels }}
          cache-from: |
            type=registry,ref=filigran/${{ matrix.image }}-deps:main
            type=registry,ref=filigran/${{ matrix.image }}-deps:${{ fromJSON(steps.meta-image.outputs.json).labels['org.opencontainers.image.version'] }}
            type=registry,ref=filigran/${{ matrix.image }}:main
            type=registry,ref=filigran/${{ matrix.image }}:${{ fromJSON(steps.meta-image.outputs.json).labels['org.opencontainers.image.version'] }}

  run-tests:
    needs: build-images
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Install docker compose
        uses: KengoTODA/actions-setup-docker-compose@v1
        with:
          version: '2.29.6'
      - name: Launch docker compose
        run: |
          export IMAGE_TAGS=${{ needs.build-images.outputs.docker-tags }}
          docker compose -f ./xtm-hub-dev/docker-compose-ci.yml run portal-e2e-tests

  run-front-test:
    needs: build-images
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Install docker compose
        uses: KengoTODA/actions-setup-docker-compose@v1
        with:
          version: '2.29.6'
      - name: Launch docker compose
        run: |
          export IMAGE_TAGS=${{ needs.build-images.outputs.docker-tags }}
          docker compose -f ./xtm-hub-dev/docker-compose-ci.yml run portal-front-test

  run-api-test:
    needs: build-images
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Install docker compose
        uses: KengoTODA/actions-setup-docker-compose@v1
        with:
          version: '2.29.6'
      - name: Launch docker compose
        run: |
          export IMAGE_TAGS=${{ needs.build-images.outputs.docker-tags }}
          docker compose -f ./xtm-hub-dev/docker-compose-ci.yml run portal-api-test

  restart-staging:
      needs:
        - run-tests
        - run-front-test
        - run-api-test
      runs-on: ubuntu-latest
      timeout-minutes: 20
      if: github.event_name != 'pull_request'
      steps:
        - name: restart deployment on staging
          run: kubectl --server=https://api.staging.eu-west.filigran.io --token=${{ secrets.K8S_TOKEN }} -n wip-cloudportal rollout restart deployment
