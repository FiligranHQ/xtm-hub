'use client';

import * as React from 'react';
import { graphql, useQueryLoader } from 'react-relay';
import useMountingLoader from '@/hooks/useMountingLoader';
import { useSearchParams } from 'next/navigation';
import Loader from '@/components/loader';
import { MalwareAnalysisForm } from '@/components/malware-analysis/malware-analysis-form';
import { Suspense } from 'react';
import {
  malwareAnalysisColumns,
  MalwareAnalysisList,
} from '@/components/malware-analysis/malware-analysis-list';
import { pageLoaderMalwareAnalysisQuery } from '../../../../../__generated__/pageLoaderMalwareAnalysisQuery.graphql';
import { DataTable } from 'filigran-ui/clients';

// Query Configuration
export const MalwareAnalysisQuery = graphql`
  query pageLoaderMalwareAnalysisQuery(
    $count: Int!
    $cursor: ID
    $orderBy: MalwareAnalysisOrdering!
    $orderMode: OrderingMode!
  ) {
    ...malwareAnalysisList_malwareAnalysis
  }
`;

// Component interfac
interface ServiceListPreloaderProps {}

// Configuration or Preloader Query

// Component
const PageLoader: React.FunctionComponent<ServiceListPreloaderProps> = () => {
  const searchParams = useSearchParams();
  const count = Number(searchParams.get('count') ?? 50);
  const orderMode = searchParams.get('orderMode') ?? 'asc';
  const orderBy = searchParams.get('orderBy') ?? 'created_at';
  const [queryRef, loadQuery] =
    useQueryLoader<pageLoaderMalwareAnalysisQuery>(MalwareAnalysisQuery);
  useMountingLoader(loadQuery, { count, orderBy, orderMode });
  return (
    <>
      <MalwareAnalysisForm />
      <Suspense
        fallback={
          <DataTable
            columns={malwareAnalysisColumns}
            data={[]}
            isLoading={true}
          />
        }>
        <MalwareAnalysisList queryRef={queryRef} />
      </Suspense>
    </>
  );
};

// Component export
export default PageLoader;
