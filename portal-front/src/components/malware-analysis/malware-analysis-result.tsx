import { FunctionComponent } from 'react';
import {
  MalwareAnalysisElement,
  MalwareAnalysisResult,
} from '@/components/malware-analysis/malware-analysis.model';
import {
  Accordion,
  AccordionContent,
  AccordionItem,
  AccordionTrigger,
  Separator,
} from 'filigran-ui/clients';
import * as React from 'react';

interface MalwareResultProps {
  result: MalwareAnalysisResult;
  name: string;
}
export const MalwareResult: FunctionComponent<MalwareResultProps> = ({
  result,
  name,
}) => {
  const { elements, relations, status } = result;
  return (
    <section>
      <div className="pb-s">
        Name: <strong>{name}</strong>
      </div>
      <div>
        Status: <strong>{status}</strong>
      </div>
      <Separator className="mb-s mt-m" />
      <Accordion
        type="multiple"
        defaultValue={['item-element', 'item-relations']}
        className="w-full">
        <AccordionItem value="item-element">
          <AccordionTrigger className="border-bottom text-subtitle">
            Elements
          </AccordionTrigger>
          <AccordionContent className="flex flex-col gap-s">
            {elements.map((elmt) => {
              if (elmt.results.length === 0) {
                return null;
              }
              return (
                <section key={elmt.id}>
                  <div className="pb-s font-semibold uppercase">
                    {elmt.type}
                  </div>
                  <ul>
                    {elmt.results.map((res) => (
                      <li key={res.connectorId}>
                        {res.connectorId} : <strong>{res.verdict}</strong>
                      </li>
                    ))}
                  </ul>
                </section>
              );
            })}
          </AccordionContent>
        </AccordionItem>
        <Separator className="my-s" />
        <AccordionItem value="item-relations">
          <AccordionTrigger className="text-subtitle">
            Relations
          </AccordionTrigger>
          <AccordionContent>
            <ul>
              {relations.map((rel) => (
                <li key={rel.id}>
                  <DisplayFromElement
                    elements={elements}
                    id={rel.from}
                  />
                  <span className="px-4">{rel.type}</span>
                  <DisplayToElement
                    elements={elements}
                    id={rel.to}
                  />
                </li>
              ))}
            </ul>
            {relations.length === 0 && <div>No relations found</div>}
          </AccordionContent>
        </AccordionItem>
      </Accordion>
    </section>
  );
};

const DisplayToElement = ({
  elements,
  id,
}: {
  elements: MalwareAnalysisElement[];
  id: string;
}) => {
  const element = elements.find((elmt) => elmt.id === id);
  return (
    <span>
      {element?.object} ({element?.type})
    </span>
  );
};

const DisplayFromElement = ({
  elements,
  id,
}: {
  elements: MalwareAnalysisElement[];
  id: string;
}) => {
  const element = elements.find((elmt) => elmt.id === id);
  return <span>{element?.type}</span>;
};
